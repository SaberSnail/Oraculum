<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ui="clr-namespace:Oraculum.UI">

	<Style x:Key="ButtonStyleBase" TargetType="{x:Type ButtonBase}">
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="ui:TemplateHelper.CornerRadius" Value="{DynamicResource ControlBorderRadius}" />
		<Setter Property="BorderThickness" Value="{DynamicResource ControlBorderThickness}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border
						x:Name="Border"
						TextBlock.Foreground="{DynamicResource FontBrush}"
						CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ui:TemplateHelper.CornerRadius)}"
						BorderThickness="{TemplateBinding BorderThickness}"
						BorderBrush="{DynamicResource ControlBackgroundBaseBrush}"
						Background="{DynamicResource ControlBackgroundBaseBrush}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.25" />
									<VisualTransition To="Pressed" GeneratedDuration="0" />
									<VisualTransition From="Pressed" GeneratedDuration="0" />
								</VisualStateGroup.Transitions>
								
								<VisualState x:Name="Normal" />
								
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetName="Border"
											Storyboard.TargetProperty="Background.(SolidColorBrush.Color)">
											<EasingColorKeyFrame
												KeyTime="0"
												Value="{DynamicResource ControlBackgroundBaseHoveredColor}" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetName="Border"
											Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)">
											<EasingColorKeyFrame
												KeyTime="0"
												Value="{DynamicResource ControlBorderBaseHoveredColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetName="Border"
											Storyboard.TargetProperty="Background.(SolidColorBrush.Color)">
											<EasingColorKeyFrame
												KeyTime="0"
												Value="{DynamicResource ControlBackgroundBasePressedColor}" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetName="Border"
											Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)">
											<EasingColorKeyFrame
												KeyTime="0"
												Value="{DynamicResource ControlBorderBasePressedColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetName="Border"
											Storyboard.TargetProperty="Background.(SolidColorBrush.Color)">
											<EasingColorKeyFrame
												KeyTime="0"
												Value="{DynamicResource ControlBackgroundBaseDisabledColor}" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetName="Border"
											Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)">
											<EasingColorKeyFrame
												KeyTime="0"
												Value="{DynamicResource ControlBackgroundBaseDisabledColor}" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames
											Storyboard.TargetName="Border"
											Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
											<EasingColorKeyFrame
												KeyTime="0"
												Value="{DynamicResource FontDisabledColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						
						<ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
					</Border>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsDefault" Value="true">
							<Setter
								TargetName="Border"
								Property="BorderBrush"
								Value="{DynamicResource ControlBorderHighContrastColor}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource ButtonStyleBase}" />

	<Style x:Key="HorizontalExpanderButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyleBase}">
		<Setter Property="ui:TemplateHelper.CornerRadius" Value="0" />
		<Setter Property="BorderThickness" Value="{DynamicResource ControlBorderLeftRightThickness}" />
	</Style>
	
</ResourceDictionary>