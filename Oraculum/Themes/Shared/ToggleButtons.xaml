<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ui="clr-namespace:Oraculum.UI">

	<Style x:Key="ToggleButtonStyleBase" TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="ui:TemplateHelper.CornerRadius" Value="{DynamicResource ControlBorderRadius}" />
		<Setter Property="BorderThickness" Value="{DynamicResource ControlBorderThickness}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border
						x:Name="Border"
						Background="{DynamicResource ControlBackgroundBaseBrush}"
						BorderBrush="{DynamicResource ControlBackgroundBaseBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ui:TemplateHelper.CornerRadius)}"
						TextBlock.Foreground="{DynamicResource FontBrush}">
						<ContentPresenter
							Margin="2"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							RecognizesAccessKey="True" />

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.25" />
									<VisualTransition GeneratedDuration="0" To="Pressed" />
									<VisualTransition GeneratedDuration="0" From="Pressed" />
								</VisualStateGroup.Transitions>

								<VisualState x:Name="Normal" />

								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{DynamicResource ControlBorderBaseHoveredColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{DynamicResource ControlBorderBasePressedColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{DynamicResource ControlBackgroundBaseDisabledColor}" />
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{DynamicResource FontDisabledColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{DynamicResource ControlBackgroundBasePressedColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="0" Value="{DynamicResource ControlBackgroundBaseDisabledColor}" />
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style BasedOn="{StaticResource ToggleButtonStyleBase}" TargetType="{x:Type ToggleButton}" />

</ResourceDictionary>